name: Push Latest Rules to Elastic Security Space

on:
  push:
    branches:
      - main
    paths:
      - '**/*.toml'
  workflow_dispatch:
    inputs:
      overwrite:
        description: 'Overwrite existing rules'
        required: false
        default: 'true'
      overwrite_exceptions:
        description: 'Overwrite existing exceptions'
        required: false
        default: 'true'
      overwrite_action_connectors:
        description: 'Overwrite existing action connectors'
        required: false
        default: 'true'
      space:
        description: 'Kibana space to use (dev or prod)'
        required: false
        default: 'prod'

jobs:
  sync-to-production:
    runs-on: ubuntu-latest
    env:
      CUSTOM_RULES_DIR: ${{ secrets.CUSTOM_RULES_DIR }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python 3.12
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip cache purge
        pip install .[dev]

    - name: Check for Production Tags
      id: check_tags
      run: |
        # Find all changed .toml files
        CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} -- '*.toml')
        echo "Changed files: $CHANGED_FILES"

        # Check for the production tag
        PROD_FILES=""
        for file in $CHANGED_FILES; do
          if grep -q 'tags:.*production' "$file"; then
            echo "Production tag found in $file"
            PROD_FILES="$PROD_FILES $file"
          fi
        done

        # Fail if no production-tagged files are found
        if [ -z "$PROD_FILES" ]; then
          echo "::warning::No production-tagged rules found. Exiting."
          exit 0
        fi

        # Save the list of files for further steps
        echo "PROD_FILES=$PROD_FILES" >> $GITHUB_ENV
