name: Sync Elastic and VCS Dev Rules

on:
  workflow_dispatch:
    inputs:
      pr_sync_rules_from_elastic:
        description: 'Sync rules from Elastic Security (direct commit (false) vs PR (true))'
        required: true
        default: 'true'
      space:
        description: 'Specify the Kibana space to export rules from'
        required: false
        default: 'dev'

jobs:
  sync-rules:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up environment
        run: |
          mkdir -p synced_rules

      - name: Fetch rules from Elastic Cloud
        env:
          KIBANA_HOST: ${{ secrets.KIBANA_HOST }}
          DR_KIBANA_USER: ${{ secrets.DR_KIBANA_USER }}
          DR_KIBANA_PASSWORD: ${{ secrets.DR_KIBANA_PASSWORD }}
        run: |
          fetch_rules() {
            SPACE=$1
            OUTPUT_FILE=$2
            curl -s -X GET "$KIBANA_HOST/s/$SPACE/api/detection_engine/rules/_export" \
              -H "kbn-xsrf: true" \
              -u "$DR_KIBANA_USER:$DR_KIBANA_PASSWORD" | \
              jq -r '.data[] | {rule_id: .rule_id, content: .}' > "$OUTPUT_FILE"
          }

          fetch_rules "dev" "synced_rules/dev_rules.json"
          fetch_rules "prod" "synced_rules/prod_rules.json"

      - name: Generate local hashes
        run: |
          generate_hashes() {
            INPUT_FILE=$1
            HASH_FILE=$2
            jq -r '.content | tostring | @base64' "$INPUT_FILE" | md5sum > "$HASH_FILE"
          }

          generate_hashes "synced_rules/dev_rules.json" "synced_rules/dev_hashes.txt"
          generate_hashes "synced_rules/prod_rules.json" "synced_rules/prod_hashes.txt"

      - name: Compare and update rules in repository
        run: |
          compare_and_update() {
            SPACE=$1
            HASH_FILE="synced_rules/${SPACE}_hashes.txt"
            JSON_FILE="synced_rules/${SPACE}_rules.json"
            RULES_DIR="custom_rules/$SPACE"

            mkdir -p "$RULES_DIR"
            while IFS= read -r hash; do
              rule_id=$(echo "$hash" | awk '{print $2}')
              local_file="$RULES_DIR/$rule_id.json"

              if [ ! -f "$local_file" ] || [ "$(md5sum "$local_file" | awk '{print $1}')" != "$hash" ]; then
                echo "Updating $rule_id.json"
                jq -r ".[] | select(.rule_id == \"$rule_id\")" "$JSON_FILE" > "$local_file"
              fi
            done < "$HASH_FILE"

            for file in "$RULES_DIR"/*.json; do
              rule_id=$(basename "$file" .json)
              if ! grep -q "$rule_id" "$HASH_FILE"; then
                echo "Deleting $file"
                rm "$file"
              fi
            done
          }

          compare_and_update "dev"
          compare_and_update "prod"

      - name: Commit and push changes
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git config user.name "GitHub Actions"
            git config user.email "actions@github.com"
            git add custom_rules/
            git commit -m "Sync rules with Elastic Cloud"
            git push
          else
            echo "No changes to commit."
          fi

